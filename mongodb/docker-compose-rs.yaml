x-base: &default-config
  restart: unless-stopped
  ulimits:
    nproc: 65535
    nofile:
      soft: 20000
      hard: 40000
  stop_grace_period: 1m
  logging:
    driver: json-file
    options:
      max-size: '200m'
      max-file: '1'
  mem_swappiness: 0

x-service: &service-config
  << : *default-config
  image: quay.io/mongodb/mongodb-community-server:7.0.1-ubi9
  # environment:
  #   MONGO_INITDB_ROOT_USERNAME: username
  #   MONGO_INITDB_ROOT_PASSWORD: password
  command:
    - mongod
    - --bind_ip_all
    - --replSet
    - rs0
    # - --keyFile
    # - /etc/mongodb/keyfile

# Note:
#
# Config DNS to resolve mongo.example.com to public ip,
# e.g. your host machine ip or cloud server public ip.
#
# If enable auth, set mongo root credential and
# exec `openssl rand -base64 756 > keyfile` to init mongodb keyfile for replica set.
#

services:
  mongo-rs-1:
    << : *service-config
    ports:
      - 27017:27017
    volumes:
      - mongo-rs-1:/data/db
      # - ${PWD}/keyfile:/etc/mongodb/keyfile

  mongo-rs-2:
    << : *service-config
    ports:
      - 27018:27017
    volumes:
      - mongo-rs-2:/data/db
      # - ${PWD}/keyfile:/etc/mongodb/keyfile

  mongo-rs-3:
    << : *service-config
    ports:
      - 27019:27017
    volumes:
      - mongo-rs-3:/data/db
      # - ${PWD}/keyfile:/etc/mongodb/keyfile

  mongo-init:
    image: quay.io/mongodb/mongodb-community-server:7.0.1-ubi9
    restart: "on-failure"
    depends_on:
      - mongo-rs-1
    command:
      - mongosh
      - mongodb://mongo.example.com:27017
      - --eval
      - |
        try {
          rs.status()
        } catch (e) {
          rs.initiate({
            _id: "rs0",
            members: [
              { _id: 0, host: "mongo.example.com:27017" },
              { _id: 1, host: "mongo.example.com:27018" },
              { _id: 2, host: "mongo.example.com:27019" },
            ]
          })
        }

volumes:
  mongo-rs-1:
  mongo-rs-2:
  mongo-rs-3:

networks:
  default:
    name: db
    external: true
